stages:
  - pull-github
  - build
  - deploy

variables:
  GIT_STRATEGY: clone			#This seems to have no effect also set in webinterface
  GIT_DEPTH: 0					#This seems to have no effect also set in webinterface
  GIT_SUBMODULE_STRATEGY: recursive

pull:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger" && $CI_COMMIT_BRANCH == "master"'
  image: nitrokey/ci-pull:latest
  tags:
    - docker
  stage: pull-github
  variables:
    #Repo for shared scripts (pull.sh release.sh, nightly_upload.sh):
    SCRIPTS_REPO: git@git.dotplex.com:nitrokey/gitlab-ci.git
  before_script:
    - apt-get update -y
    - ./ci-scripts/copy_common_scripts_key.sh
    - export SCRIPTS_DIR=$(mktemp -d)
    - git clone -q --depth 1 $SCRIPTS_REPO $SCRIPTS_DIR
  script:
    - chmod +x  $SCRIPTS_DIR/ci-scripts/pull.sh
    - $SCRIPTS_DIR/ci-scripts/pull.sh nitrokey nitrokey-fido2-firmware

build:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
  tags:
    - lxc
  stage: build
  script:
    - make ci
  artifacts:
    paths:
      - builds/*

upload-nightly:
  stage: deploy
  variables:
    #Repo for shared scripts (pull.sh release.sh, nightly_upload.sh):
    SCRIPTS_REPO: git@git.dotplex.com:nitrokey/gitlab-ci.git
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  tags:
    - docker
  image: nitrokey/ci-nightly-upload:latest
  before_script:
    - apt-get update -y
    - ./ci-scripts/copy_common_scripts_key.sh
    - export SCRIPTS_DIR=$(mktemp -d)
    - git clone -q --depth 1 $SCRIPTS_REPO $SCRIPTS_DIR
  script:
    - zip -r artifacts/release.zip builds
    - chmod +x $SCRIPTS_DIR/ci-scripts/nightly_upload.sh
    - $SCRIPTS_DIR/ci-scripts/nightly_upload.sh


build-simulation:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'  #run this job only on push event
  image: ubuntu:20.04
  tags:
    - lxc
  stage: build
  before_script:
    - apt update -y
    - apt install -y git make make python3
    - git submodule update --init --recursive --recommend-shallow
  script:
    - make all
  allow_failure: true #TODO remove this

deploy-release:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
  image: nitrokey/ci-publish-git:latest
  tags:
    - docker
  stage: deploy
  variables:
    #Repo for shared scripts (pull.sh release.sh, nightly_upload.sh):
    SCRIPTS_REPO: git@git.dotplex.com:nitrokey/gitlab-ci.git
  before_script:
    - apt-get update -y
    - ./ci-scripts/copy_common_scripts_key.sh
    - export SCRIPTS_DIR=$(mktemp -d)
    - git clone -q --depth 1 $SCRIPTS_REPO $SCRIPTS_DIR
  script:
    - zip -r artifacts/release.zip builds
    - chmod +x $SCRIPTS_DIR/ci-scripts/release.sh
    - $SCRIPTS_DIR/ci-scripts/release.sh